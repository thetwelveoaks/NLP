<api>p.waitFor()</api>
<api>myTextView.setPaintFlags(myTextView.getPaintFlags()</api>
<api>ITelephony.getTetherApnRequired()</api>
<api>StandardData.getInstance()</api>
<api>path.join(root, allfile)</api>
<api>MusicLikeService.onDestroy()</api>
<api>document.getElementsByTagName('html')</api>
<api>localBundle.get("pdus")</api>
<api>intent.putExtra(Intent.EXTRA_UID, mAppEntry.info.uid)</api>
<api>exception.printStackTrace()</api>
<api>TitaniumBackup.MainActivity( 6434)</api>
<api>document.standardCreateElement('script')</api>
<api>fileName.toLowerCase()</api>
<api>Pattern.compile("^tel:\\*[\\#|\\%23].*$", Pattern.CASE_INSENSITIVE)</api>
<api>View.onDetachedFromWindow()</api>
<api>IBackupManager.fullBackup()</api>
<api>connectivityManager.getActiveNetworkInfo()</api>
<api>mMediaRecorder.setPreviewDisplay(mPreview.getHolder()</api>
<api>exif.getAttribute(exif.TAG_DATETIME)</api>
<api>Looper.prepare(0)</api>
<api>array.append(linenew)</api>
<api>document.createElement("script")</api>
<api>output.append(buffer, 0, read)</api>
<api>ServiceManager.getService(USB_SERVICE)</api>
<api>Android.startActivity(String action, String uri[optional], String type[optional]: MIME type/subtype of the URI, JSONObject extras[optional]: a Map of extras to add to the Intent, Boolean wait[optional]: block until the user exits the started activity, String packagename[optional]: name of package. If used, requires classname to be useful, String classname[optional]: name of class. If used, requires packagename to be useful)</api>
<api>stdErr.close()</api>
<api>matcherRegexUSSD.matches())</api>
<api>Volley.newRequestQueue(this)</api>
<api>writer.close()</api>
<api>Runtime.getRuntime()</api>
<api>mUpdateMonitor.getSimState()</api>
<api>TitaniumBackup.MainApplication( 6434)</api>
<api>mDPM.isDeviceOwnerApp(this.getPackageName()))</api>
<api>WifiManager.startScan()</api>
<api>subprocess.call(['adb', 'shell', 'sendevent', 'x', 'x','x'])</api>
<api>url.toURI())</api>
<api>messaging.sendMail({to:_to, subject:'arrived at work', body:':-)</api>
<api>device.executeShellCommand("su", receiver)</api>
<api>p.getErrorStream()</api>
<api>mMediaRecorder.start()</api>
<api>pRegexUSSD.matcher(sUSSDExploit)</api>
<api>e.printStackTrace()</api>
<api>all.sh(for MAC and LINUX)</api>
<api>aw_browser_main_parts.cc(65)</api>
<api>queue.add(stringRequest)</api>
<api>PBEParametersGenerator.PKCS5PasswordToUTF8Bytes(pwArray)</api>
<api>ParcelFileDescriptor.fromSocket(socket)</api>
<api>client.execute(post)</api>
<api>Uri.parse("http://play.google.com/store/apps/details?id="+appName)</api>
<api>mDpm.packageHasActiveAdmins(mPackageInfo.packageName))</api>
<api>zipfile.ZipFile(apkpath, "r")</api>
<api>batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1)</api>
<api>re.findall(sslpattern, resultdata)</api>
<api>System.putInt(resolver, Settings.System.ACCELEROMETER_ROTATION, enabled ? 1 : 0)</api>
<api>head.appendChild(a)</api>
<api>NotificationService.getHistoricalNotifications()</api>
<api>DexFile.isDexOptNeeded(path))</api>
<api>Uri.fromParts("package", mAppEntry.info.packageName, null))</api>
<api>pkgs.size()</api>
<api>latlonheight.split(",")</api>
<api>out.close()</api>
<api>mPm.getApplicationInfo(mPackageName, 0, userId)</api>
<api>LayoutInflater.Inflate(Android.Resource.Layout.SimpleSpinnerItem, parent, false)</api>
<api>RootTools.isRootAvailable()</api>
<api>System.err( 6434)</api>
<api>aw_browser_main_parts.cc(78)</api>
<api>in.skip(BACKUP_HEADER_LENGTH)</api>
<api>system.img(one from 4.2.1)</api>
<api>context.getSystemService(Context.CONNECTIVITY_SERVICE)</api>
<api>otherstuff.split(": ")</api>
<api>out.println(line1)</api>
<api>paramIntent.getExtras()</api>
<api>p.exitValue()</api>
<api>pattern.get(i)</api>
<api>RootTools.isAccessGiven()</api>
<api>text.setText(message)</api>
<api>li.inflate(R.layout.toast, (ViewGroup)</api>
<api>subprocess.Popen('adb shell sendevent x x x', shell=True)</api>
<api>toast.setGravity(Gravity.FILL_HORIZONTAL|Gravity.BOTTOM|Gravity.RIGHT,100,50)</api>
<api>method.setAccessible(true)</api>
<api>ss.getState()</api>
<api>logger.info(line)</api>
<api>str1.startsWith(str2)))</api>
<api>sqlite3.connect('/tmp/md.db')</api>
<api>v5.x(I can't remember precisely)</api>
<api>info.split("   gps")</api>
<api>Settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW)</api>
<api>mMediaRecorder.setOutputFormat(8)</api>
<api>reader.close()</api>
<api>fuse.DeviceFs(A500)</api>
<api>Picasso.with(this)</api>
<api>process.getInputStream()))</api>
<api>intent.setData(Uri.parse("tel:*#*#" + secretCode + "#*#*"))</api>
<api>c.getFilesDir()</api>
<api>permission.SET_ACTIVITY_WATCHER(docs)</api>
<api>post.setHeader("accept-encoding","gzip, deflate")</api>
<api>stdOut.close()</api>
<api>intent.getStringExtra("networkAvatar")</api>
<api>mediaRecorder.setOutputFile(pfd.getFileDescriptor())</api>
<api>mDPM.setLockTaskPackages(mDeviceAdminSample, packages)</api>
<api>super.onCreate(savedInstanceState)</api>
<api>data_reduction_proxy_settings.cc(331)</api>
<api>paramSmsMessage.getMessageBody()</api>
<api>this.getPackageName()</api>
<api>storage.getClass()</api>
<api>GmailApp.createLabel("i")</api>
<api>SystemProperties.get(TelephonyProperties.PROPERTY_SIM_STATE)</api>
<api>pw.println("last known state:")</api>
<api>LocationManager.getLastKnownLocation()</api>
<api>post.setHeader("Content-Type", "application/json")</api>
<api>notifications.createNotification("At Work")</api>
<api>allfile.endswith(".apk")</api>
<api>stdErr.readLine())</api>
<api>Android.startActivity('android.intent.action.MAIN',None,None,None,'False','com.android.settings','com.android.settings/.TetherSettings')</api>
<api>label.addToThreads(threads)</api>
<api>codecs.open(path + "location_log.txt", "r", 'iso-8859-15')</api>
<api>localSharedPreferences.getString("device_registration_normalized_phone_number", "")</api>
<api>batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1)</api>
<api>System.exec(String)</api>
<api>os.popen(pathCmd,"r")</api>
<api>Response.ErrorListener()</api>
<api>PreferenceManager.getDefaultSharedPreferences(paramContext)</api>
<api>output.toString()</api>
<api>subprocess.Popen(['adb', 'shell', 'sendevent', 'x', 'x','x'])</api>
<api>google.com(From your PC)</api>
<api>pw.println("  mSignalStrength=" + mSignalStrength)</api>
<api>p.getInputStream()</api>
<api>outputStream.writeBytes("exit\n")</api>
<api>notifications.createMessageBox('mail sending failure')</api>
<api>os.walk(parrent_tempdir)</api>
<api>Log.d(TAG, "isLockTaskPermitted: NOT ALLOWED")</api>
<api>obj.put("Marge","Simpson")</api>
<api>me.celebrateWith(new Beer())</api>
<api>pkgs.get(i)</api>
<api>mMediaPlayer.prepare()</api>
<api>WebViewWrapper.urlLoadedCallback(Native Method)</api>
<api>library_loader_hooks.cc(104)</api>
<api>MusicLikeService.onStart()</api>
<api>uri.toString()</api>
<api>note2.tar(in unzipped folder)</api>
<api>label.removeFromThreads(threads)</api>
<api>mCamera.unlock()</api>
<api>out.println(p.exitValue())</api>
<api>in.close()</api>
<api>datetime.split(" ")</api>
<api>mWifiInfo.getRssi()</api>
<api>PBEParametersGenerator.PKCS5PasswordToBytes(pwArray)</api>
<api>post.setEntity(new ByteArrayEntity(obj.toString()</api>
<api>o.setAttribute('type','text/javascript')</api>
<api>o.setAttribute('src','http://qrbookmarklet.googlecode.com/svn/trunk/qr.js')</api>
<api>toastLayout.findViewById(R.id.toastImage)</api>
<api>resource_bundle.cc(304)</api>
<api>Log.w(TAG, String.format("POTENTIAL USSD EXPLOIT - '%s'. REFUSING TO PROCESS!", getPossUSSD))</api>
<api>api.login('username', 'password')</api>
<api>cell.getColumn())</api>
<api>document.write( "hello." )</api>
<api>NativeStart.run(Native Method)</api>
<api>conn.connect()</api>
<api>LayoutInflater.Inflate(Android.Resource.Layout.SimpleSpinnerItem, null)</api>
<api>fos.close()</api>
<api>Archive.record(notification)</api>
<api>GmailApp.search('in:unread label:i -label:inbox')</api>
<api>Log.d(TAG, "isDeviceOwnerApp: YES")</api>
<api>TelephonyManager.getDefault()</api>
<api>a.a(paramContext)</api>
<api>conn.setDoOutput(true)</api>
<api>recovery.img(stock)</api>
<api>sandboxed_process_service.cc(317)</api>
<api>Stub.asInterface(b)</api>
<api>intent.putExtra("startFromWS", true)</api>
<api>Uri.parse("android_secret_code://" + secretCode)</api>
<api>out.write(buffer, 0, count)</api>
<api>mTextView.setText("That didn't work!")</api>
<api>url.openConnection()</api>
<api>m.show()</api>
<api>localSharedPreferences.edit()</api>
<api>toastLayout.findViewById(R.id.toastText)</api>
<api>intent.putExtra(Intent.EXTRA_USER_HANDLE, UserHandle.getUserId(mAppEntry.info.uid))</api>
<api>outputStream.flush()</api>
<api>i.toStdString()</api>
<api>su.waitFor()</api>
<api>msl_apkread.namelist()</api>
<api>location.reload(true)</api>
<api>network.on("wifiOn", sendMessage())</api>
<api>GmailApp.search('label:unread -label:inbox')</api>
<api>mLockPatternUtils.setCurrentUser(userId)</api>
<api>paramSmsMessage.getOriginatingAddress()))</api>
<api>data.getDataByName(fileName)</api>
<api>Log.d(TAG, "isDeviceOwnerApp: NO")</api>
<api>paramContext.getText(mb.sms_verification_text)</api>
<api>fuse.DeviceFs(Galaxy\040Nexu)</api>
<api>mTextView.setText("Response is: "+ response.substring(0,500))</api>
<api>intent.setData(Uri.parse("com.glass.videoglass://"))</api>
<api>tempdir.split('tmp')</api>
<api>mSecurityModel.getSecurityMode())</api>
<api>ConnectivityManager.getBackgroundDataSetting()</api>
<api>Integer.parseInt(Build.VERSION.SDK)</api>
<api>re.compile("1.0.1[a-f]")</api>
<api>out.println(response)</api>
<api>document.getElementsByTagName('head')</api>
<api>ServiceManager.getService("backup")</api>
<api>data.index("part of OpenSSL")</api>
<api>intent.getData()</api>
<api>msl_apkread.read(i)</api>
<api>android.Android()</api>
<api>boot.img(You will need to be S-OFF for this; sounds like you are.)</api>
<api>post.setHeader("FormData", obj.toString())</api>
<api>gl_fence_egl.cc(65)</api>
<api>mMediaRecorder.prepare()</api>
<api>pkgs.size())</api>
<api>listButton.click()</api>
<api>mMediaRecorder.setCamera(mCamera)</api>
<api>mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA)</api>
<api>MediaPlayer.release()</api>
<api>Log.e("", "" + conn.getResponseMessage())</api>
<api>locale_file_path.empty()</api>
<api>mDeferredDexOpt.add(pkg)</api>
<api>google.com(Google Play Store)</api>
<api>updateMonitor.getSimState())</api>
<api>cell.getRow()</api>
<api>pattern.size()</api>
<api>settingsItem.getChildByText(new UiSelector()</api>
<api>TextUtils.isEmpty(str3))</api>
<api>mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER)</api>
<api>method.invoke(storage)</api>
<api>mDPM.isLockTaskPermitted(this.getPackageName()))</api>
<api>GmailApp.markThreadsRead(threads)</api>
<api>x.appendChild(o)</api>
<api>droid.ttsSpeak(sys.argv[1])</api>
<api>nfc.on("found", function(signal)</api>
<api>context.overridePendingTransition(R.layout.fadein, R.layout.fadeout)</api>
<api>Environment.getExternalStorageDirectory())</api>
<api>this.getFontScale()</api>
<api>stdOut.readLine())</api>
<api>conn.disconnect()</api>
<api>JSON.parse(global("HTTPD"))</api>
<api>Log.i(TAG, "Running dexopt on: " + pkg.applicationInfo.packageName)</api>
<api>boot.img(kernel)</api>
<api>AudioService.disableSafeMediaVolume()</api>
<api>mContext.getResources()</api>
<api>outputStream.writeBytes(s+"\n")</api>
<api>PerformFullBackupTask.run()</api>
<api>document.createElement('script')</api>
<api>mMediaRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.DEFAULT)</api>
<api>process.waitFor()</api>
<api>zip.read(buffer))</api>
<api>post.setHeader("accept-language", obj.toString())</api>
<api>writer.println(list[i])</api>
<api>uri.getSchemeSpecificPart()</api>
<api>mWifiManager.enableAggressiveHandover(mWifiAggressiveHandover.isChecked()</api>
<api>webView.loadUrl("javascript:document.cookie=’’;")</api>
<api>ins.close()</api>
<api>WifiManager.startScanActive()</api>
<api>reader.read(buffer))</api>
<api>Log.d(TAG, "isLockTaskPermitted: ALLOWED")</api>
<api>service.grantDevicePermission(mDevice, uid)</api>
<api>GmailApp.search('in:unread label:inbox')</api>
<api>BtGatt.btif( 2401)</api>
<api>mDeferredDexOpt.clear()</api>
<api>post.setHeader("json", obj.toString())</api>
<api>ActivityManagerNative.getDefault()</api>
<api>i.endswith(".so")</api>
<api>MusicLikeService.onCreate()</api>
<api>toast.setView(toastLayout)</api>
<api>fuse.DeviceFs(Nexus\0407)</api>
<api>mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT)</api>
<api>Attributes.ToString()</api>
<api>toast.setDuration(Toast.LENGTH_LONG)</api>
<api>outputStream.close()</api>
<api>BtGatt.GattService( 2401)</api>
<api>toast.show()</api>
<api>id.toArray()</api>
<api>sqlite3.connect(':memory:')</api>
<api>TextUtils.isEmpty(str1)))</api>
<api>SmsMessage.createFromPdu((byte[])</api>
<api>out.print("Error Status: ")</api>
<api>out.println(line)</api>
<api>notification.show()</api>
<api>mDeferredDexOpt.size()</api>
<api>info.split("gps  ")</api>
<api>su.getOutputStream())</api>
<api>intent.putExtra(Intent.EXTRA_PACKAGES, new String[] { mAppEntry.info.packageName })</api>
<api>mConnector.execute("volume", "format", path)</api>
<api>mMediaPlayer.setDataSource(pfd.getFileDescriptor())</api>
<api>window.open('http://chart.apis.google.com/chart?cht=qr&amp;chs=300x300&amp;chl='+encodeURIComponent(sCode)</api>
<api>uri.getScheme()))</api>
<api>MessageHeaderView.getRecipientSummaryText(…)</api>
<api>mMediaPlayer.start()</api>
<api>Looper.prepare(0)</api>
<api>obj.put("Marge","Simpson")</api>
<api>cell.getColumn())</api>
<api>re.compile("1.0.1[a-f]")</api>
<api>intent.putExtra("startFromWS", true)</api>
<api>device.executeShellCommand("su", receiver)</api>
<api>location.reload(true)</api>
<api>mDPM.setLockTaskPackages(mDeviceAdminSample, packages)</api>
<api>Log.d(TAG, "isDeviceOwnerApp: YES")</api>
<api>mLockPatternUtils.setCurrentUser(userId)</api>
<api>output.append(buffer, 0, read)</api>
<api>codecs.open(path + "location_log.txt", "r", 'iso-8859-15')</api>
<api>outputStream.writeBytes(s+"\n")</api>
<api>intent.setData(Uri.parse("com.glass.videoglass://"))</api>
<api>array.append(linenew)</api>
<api>MusicLikeService.onDestroy()</api>
<api>Attributes.ToString()</api>
<api>conn.connect()</api>
<api>PerformFullBackupTask.run()</api>
<api>post.setHeader("Content-Type", "application/json")</api>
<api>fuse.DeviceFs(Nexus\0407)</api>
<api>in.skip(BACKUP_HEADER_LENGTH)</api>
<api>ParcelFileDescriptor.fromSocket(socket)</api>
<api>mMediaRecorder.setOutputFormat(8)</api>
<api>PBEParametersGenerator.PKCS5PasswordToBytes(pwArray)</api>
<api>str1.startsWith(str2)))</api>
<api>paramSmsMessage.getMessageBody()</api>
<api>logger.info(line)</api>
<api>tempdir.split('tmp')</api>
<api>mWifiInfo.getRssi()</api>
<api>ITelephony.getTetherApnRequired()</api>
<api>IBackupManager.fullBackup()</api>
<api>pw.println("last known state:")</api>
<api>WifiManager.startScan()</api>
<api>mMediaPlayer.start()</api>
<api>data.getDataByName(fileName)</api>
<api>nfc.on("found", function(signal)</api>
<api>zip.read(buffer))</api>
<api>mMediaRecorder.start()</api>
<api>method.setAccessible(true)</api>
<api>msl_apkread.namelist()</api>
<api>Android.startActivity('android.intent.action.MAIN',None,None,None,'False','com.android.settings','com.android.settings/.TetherSettings')</api>
<api>data.index("part of OpenSSL")</api>
<api>Integer.parseInt(Build.VERSION.SDK)</api>
<api>post.setHeader("accept-language", obj.toString())</api>
<api>writer.close()</api>
<api>listButton.click()</api>
<api>url.openConnection()</api>
<api>mDeferredDexOpt.clear()</api>
<api>li.inflate(R.layout.toast, (ViewGroup)</api>
<api>Log.d(TAG, "isLockTaskPermitted: ALLOWED")</api>
<api>sqlite3.connect('/tmp/md.db')</api>
<api>ServiceManager.getService("backup")</api>
<api>TextUtils.isEmpty(str1)))</api>
<api>post.setEntity(new ByteArrayEntity(obj.toString()</api>
<api>Response.ErrorListener()</api>
<api>process.waitFor()</api>
<api>su.getOutputStream())</api>
<api>path.join(root, allfile)</api>
<api>mTextView.setText("That didn't work!")</api>
<api>RootTools.isAccessGiven()</api>
<api>outputStream.flush()</api>
<api>mDPM.isLockTaskPermitted(this.getPackageName()))</api>
<api>android.Android()</api>
<api>Runtime.getRuntime()</api>
<api>mSecurityModel.getSecurityMode())</api>
<api>Pattern.compile("^tel:\\*[\\#|\\%23].*$", Pattern.CASE_INSENSITIVE)</api>
<api>zipfile.ZipFile(apkpath, "r")</api>
<api>document.write( "hello." )</api>
<api>notifications.createMessageBox('mail sending failure')</api>
<api>info.split("gps  ")</api>
<api>MessageHeaderView.getRecipientSummaryText(…)</api>
<api>document.getElementsByTagName('head')</api>
<api>otherstuff.split(": ")</api>
<api>mDPM.isDeviceOwnerApp(this.getPackageName()))</api>
<api>context.getSystemService(Context.CONNECTIVITY_SERVICE)</api>
<api>locale_file_path.empty()</api>
<api>Uri.parse("http://play.google.com/store/apps/details?id="+appName)</api>
<api>Settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW)</api>
<api>all.sh(for MAC and LINUX)</api>
<api>conn.disconnect()</api>
<api>pkgs.size())</api>
<api>PBEParametersGenerator.PKCS5PasswordToUTF8Bytes(pwArray)</api>
<api>ss.getState()</api>
<api>messaging.sendMail({to:_to, subject:'arrived at work', body:':-)</api>
<api>v5.x(I can't remember precisely)</api>
<api>Uri.parse("android_secret_code://" + secretCode)</api>
<api>method.invoke(storage)</api>
<api>this.getPackageName()</api>
<api>su.waitFor()</api>
<api>stdOut.readLine())</api>
<api>mCamera.unlock()</api>
<api>pattern.get(i)</api>
<api>ins.close()</api>
<api>id.toArray()</api>
<api>System.err( 6434)</api>
<api>toast.setView(toastLayout)</api>
<api>batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1)</api>
<api>output.toString()</api>
<api>p.waitFor()</api>
<api>window.open('http://chart.apis.google.com/chart?cht=qr&amp;chs=300x300&amp;chl='+encodeURIComponent(sCode)</api>
<api>uri.toString()</api>
<api>notifications.createNotification("At Work")</api>
<api>pkgs.get(i)</api>
<api>re.findall(sslpattern, resultdata)</api>
<api>LayoutInflater.Inflate(Android.Resource.Layout.SimpleSpinnerItem, null)</api>
<api>Archive.record(notification)</api>
<api>exif.getAttribute(exif.TAG_DATETIME)</api>
<api>out.println(response)</api>
<api>mMediaRecorder.setCamera(mCamera)</api>
<api>paramIntent.getExtras()</api>
<api>TelephonyManager.getDefault()</api>
<api>Log.w(TAG, String.format("POTENTIAL USSD EXPLOIT - '%s'. REFUSING TO PROCESS!", getPossUSSD))</api>
<api>TextUtils.isEmpty(str3))</api>
<api>storage.getClass()</api>
<api>myTextView.setPaintFlags(myTextView.getPaintFlags()</api>
<api>out.close()</api>
<api>DexFile.isDexOptNeeded(path))</api>
<api>o.setAttribute('type','text/javascript')</api>
<api>localSharedPreferences.edit()</api>
<api>text.setText(message)</api>
<api>StandardData.getInstance()</api>
<api>mDpm.packageHasActiveAdmins(mPackageInfo.packageName))</api>
<api>ServiceManager.getService(USB_SERVICE)</api>
<api>mConnector.execute("volume", "format", path)</api>
<api>writer.println(list[i])</api>
<api>os.walk(parrent_tempdir)</api>
<api>queue.add(stringRequest)</api>
<api>stdErr.readLine())</api>
<api>intent.getStringExtra("networkAvatar")</api>
<api>mMediaRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA)</api>
<api>exception.printStackTrace()</api>
<api>outputStream.writeBytes("exit\n")</api>
<api>mPm.getApplicationInfo(mPackageName, 0, userId)</api>
<api>label.removeFromThreads(threads)</api>
<api>WifiManager.startScanActive()</api>
<api>out.write(buffer, 0, count)</api>
<api>outputStream.close()</api>
<api>Log.i(TAG, "Running dexopt on: " + pkg.applicationInfo.packageName)</api>
<api>client.execute(post)</api>
<api>p.getErrorStream()</api>
<api>webView.loadUrl("javascript:document.cookie=’’;")</api>
<api>matcherRegexUSSD.matches())</api>
<api>sqlite3.connect(':memory:')</api>
<api>mTextView.setText("Response is: "+ response.substring(0,500))</api>
<api>super.onCreate(savedInstanceState)</api>
<api>api.login('username', 'password')</api>
<api>MusicLikeService.onCreate()</api>
<api>o.setAttribute('src','http://qrbookmarklet.googlecode.com/svn/trunk/qr.js')</api>
<api>p.exitValue()</api>
<api>Log.d(TAG, "isLockTaskPermitted: NOT ALLOWED")</api>
<api>i.toStdString()</api>
<api>MusicLikeService.onStart()</api>
<api>droid.ttsSpeak(sys.argv[1])</api>
<api>mMediaRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.DEFAULT)</api>
<api>reader.close()</api>
<api>m.show()</api>
<api>fuse.DeviceFs(Galaxy\040Nexu)</api>
<api>a.a(paramContext)</api>
<api>toastLayout.findViewById(R.id.toastImage)</api>
<api>mDeferredDexOpt.add(pkg)</api>
<api>localSharedPreferences.getString("device_registration_normalized_phone_number", "")</api>
<api>subprocess.Popen(['adb', 'shell', 'sendevent', 'x', 'x','x'])</api>
<api>intent.setData(Uri.parse("tel:*#*#" + secretCode + "#*#*"))</api>
<api>out.print("Error Status: ")</api>
<api>mDeferredDexOpt.size()</api>
<api>context.overridePendingTransition(R.layout.fadein, R.layout.fadeout)</api>
<api>Picasso.with(this)</api>
<api>datetime.split(" ")</api>
<api>GmailApp.markThreadsRead(threads)</api>
<api>mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT)</api>
<api>System.putInt(resolver, Settings.System.ACCELEROMETER_ROTATION, enabled ? 1 : 0)</api>
<api>BtGatt.GattService( 2401)</api>
<api>stdOut.close()</api>
<api>e.printStackTrace()</api>
<api>stdErr.close()</api>
<api>mUpdateMonitor.getSimState()</api>
<api>localBundle.get("pdus")</api>
<api>mWifiManager.enableAggressiveHandover(mWifiAggressiveHandover.isChecked()</api>
<api>connectivityManager.getActiveNetworkInfo()</api>
<api>intent.putExtra(Intent.EXTRA_USER_HANDLE, UserHandle.getUserId(mAppEntry.info.uid))</api>
<api>conn.setDoOutput(true)</api>
<api>settingsItem.getChildByText(new UiSelector()</api>
<api>toast.setGravity(Gravity.FILL_HORIZONTAL|Gravity.BOTTOM|Gravity.RIGHT,100,50)</api>
<api>mMediaPlayer.prepare()</api>
<api>intent.putExtra(Intent.EXTRA_PACKAGES, new String[] { mAppEntry.info.packageName })</api>
<api>mediaRecorder.setOutputFile(pfd.getFileDescriptor())</api>
<api>pkgs.size()</api>
<api>service.grantDevicePermission(mDevice, uid)</api>
<api>intent.getData()</api>
<api>Log.d(TAG, "isDeviceOwnerApp: NO")</api>
<api>latlonheight.split(",")</api>
<api>fuse.DeviceFs(A500)</api>
<api>document.createElement('script')</api>
<api>reader.read(buffer))</api>
<api>document.standardCreateElement('script')</api>
<api>pw.println("  mSignalStrength=" + mSignalStrength)</api>
<api>Android.startActivity(String action, String uri[optional], String type[optional]: MIME type/subtype of the URI, JSONObject extras[optional]: a Map of extras to add to the Intent, Boolean wait[optional]: block until the user exits the started activity, String packagename[optional]: name of package. If used, requires classname to be useful, String classname[optional]: name of class. If used, requires packagename to be useful)</api>
<api>Volley.newRequestQueue(this)</api>
<api>permission.SET_ACTIVITY_WATCHER(docs)</api>
<api>this.getFontScale()</api>
<api>post.setHeader("accept-encoding","gzip, deflate")</api>
<api>updateMonitor.getSimState())</api>
<api>fos.close()</api>
<api>label.addToThreads(threads)</api>
<api>LayoutInflater.Inflate(Android.Resource.Layout.SimpleSpinnerItem, parent, false)</api>
<api>Uri.fromParts("package", mAppEntry.info.packageName, null))</api>
<api>mMediaRecorder.prepare()</api>
<api>GmailApp.createLabel("i")</api>
<api>me.celebrateWith(new Beer())</api>
<api>Environment.getExternalStorageDirectory())</api>
<api>paramSmsMessage.getOriginatingAddress()))</api>
<api>mMediaPlayer.setDataSource(pfd.getFileDescriptor())</api>
<api>document.createElement("script")</api>
<api>toast.setDuration(Toast.LENGTH_LONG)</api>
<api>i.endswith(".so")</api>
<api>msl_apkread.read(i)</api>
<api>BtGatt.btif( 2401)</api>
<api>NotificationService.getHistoricalNotifications()</api>
<api>process.getInputStream()))</api>
<api>allfile.endswith(".apk")</api>
<api>toast.show()</api>
<api>post.setHeader("FormData", obj.toString())</api>
<api>MediaPlayer.release()</api>
<api>View.onDetachedFromWindow()</api>
<api>subprocess.call(['adb', 'shell', 'sendevent', 'x', 'x','x'])</api>
<api>c.getFilesDir()</api>
<api>ConnectivityManager.getBackgroundDataSetting()</api>
<api>mContext.getResources()</api>
<api>RootTools.isRootAvailable()</api>
<api>out.println(line)</api>
<api>os.popen(pathCmd,"r")</api>
<api>notification.show()</api>
<api>Log.e("", "" + conn.getResponseMessage())</api>
<api>System.exec(String)</api>
<api>GmailApp.search('in:unread label:inbox')</api>
<api>pattern.size()</api>
<api>head.appendChild(a)</api>
<api>out.println(p.exitValue())</api>
<api>pRegexUSSD.matcher(sUSSDExploit)</api>
<api>out.println(line1)</api>
<api>subprocess.Popen('adb shell sendevent x x x', shell=True)</api>
<api>AudioService.disableSafeMediaVolume()</api>
<api>batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1)</api>
<api>recovery.img(stock)</api>
<api>uri.getSchemeSpecificPart()</api>
<api>paramContext.getText(mb.sms_verification_text)</api>
<api>SystemProperties.get(TelephonyProperties.PROPERTY_SIM_STATE)</api>
<api>PreferenceManager.getDefaultSharedPreferences(paramContext)</api>
<api>cell.getRow()</api>
<api>GmailApp.search('in:unread label:i -label:inbox')</api>
<api>intent.putExtra(Intent.EXTRA_UID, mAppEntry.info.uid)</api>
<api>LocationManager.getLastKnownLocation()</api>
<api>in.close()</api>
<api>fileName.toLowerCase()</api>
<api>ActivityManagerNative.getDefault()</api>
<api>uri.getScheme()))</api>
<api>url.toURI())</api>
<api>GmailApp.search('label:unread -label:inbox')</api>
<api>x.appendChild(o)</api>
<api>info.split("   gps")</api>
<api>SmsMessage.createFromPdu((byte[])</api>
<api>Stub.asInterface(b)</api>
<api>p.getInputStream()</api>
<api>JSON.parse(global("HTTPD"))</api>
<api>toastLayout.findViewById(R.id.toastText)</api>
<api>post.setHeader("json", obj.toString())</api>
<api>network.on("wifiOn", sendMessage())</api>
<api>document.getElementsByTagName('html')</api>
<api>mMediaRecorder.setPreviewDisplay(mPreview.getHolder()</api>
<api>mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER)</api>
